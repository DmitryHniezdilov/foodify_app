{"version":3,"sources":["utils.js","redux/actionTypes.js","redux/reducers/general.js","redux/store.js","components/Footer/styles.js","components/Footer/index.js","redux/actions/general.js","containers/Header/styles.js","containers/Header/index.js","components/PageLayout/styles.js","components/PageLayout/index.js","components/Card/styles.js","components/Card/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Favourites/index.js","pages/NotFound/index.js","components/CardDetails/styles.js","components/CardDetails/index.js","pages/Details/styles.js","pages/Details/index.js","Router.js","components/Loading/styles.js","components/Loading/index.js","containers/AddDishModal/styles.js","containers/AddDishModal/index.js","App.js","index.js"],"names":["localStorageHelper","stored","localStorage","getItem","JSON","parse","value","setItem","stringify","START_LOADING","FINISH_LOADING","SET_RECIPE","SET_FAVOUR_LIST","SET_CUSTOM_DISH_TO_FAVOUR_LIST","OPEN_MODAL","CLOSED_MODAL","initialState","recipe","recipeFavourList","isLoading","isOpenModal","rootReducer","combineReducers","general","state","action","type","types","favourList","store","createStore","initialFavourList","persistedState","composeWithDevTools","applyMiddleware","ReduxThunk","InitStore","children","useStyles","makeStyles","icon","color","Footer","classes","Box","align","component","my","Typography","variant","IconButton","className","Link","href","rel","size","target","setRecipe","dispatch","a","fetch","then","res","json","meals","setFavourList","theme","header","borderBottom","palette","divider","headerList","minHeight","justifyContent","headerItemModal","Header","isModal","useDispatch","Grid","container","disablePadding","List","item","ListItem","xs","Button","RouterLink","to","md","onClick","pageLayout","backgroundColor","display","flexDirection","position","pageLayoutBox","flexGrow","textAlign","footer","flexShrink","PageLayout","Container","maxWidth","card","width","height","cardLink","cardMediaBox","objectFit","cardMedia","cardInstructions","boxOrient","lineClamp","wordBreak","overflow","Card","props","imageUrl","dishName","instructions","id","image","CardActionArea","CardMedia","title","CardContent","gutterBottom","cardActions","Main","useSelector","idMeal","strMeal","strMealThumb","strInstructions","useState","isFavour","setFavour","useEffect","find","CardActions","endIcon","delFromRecipeFavourList","filter","Favourites","isRecipeFavourList","length","reversedRecipeFavourList","reverse","spacing","mt","map","sm","NotFound","cardDetails","cardDetailsMediaBox","cardDetailsMedia","CardDetails","cardDetailsActions","Details","history","useHistory","useRouteMatch","params","findItem","push","Router","exact","path","loading","background","paper","zIndex","top","left","alignItems","Loading","activeLoading","style","CircularProgress","modal","padding","marginLeft","marginRight","form","marginTop","submit","margin","error","AddDishModal","useForm","handleSubmit","errors","control","handleClose","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","open","onClose","Fade","in","Paper","onSubmit","text","customDish","String","Date","now","mb","as","TextField","autoFocus","fullWidth","helperText","message","label","defaultValue","name","rules","required","minLength","multiline","rows","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73d1947d.chunk.js","sourcesContent":["export const localStorageHelper = {\n\n    load() {\n        const stored = localStorage.getItem('recipeFavourList');\n\n        return stored ? JSON.parse(stored) : [];\n    },\n    store(value) {\n        localStorage.setItem('recipeFavourList', JSON.stringify(value));\n    },\n};\n","export const START_LOADING = 'START_LOADING';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\nexport const SET_RECIPE = 'SET_RECIPE';\nexport const SET_FAVOUR_LIST = 'SET_FAVOUR_LIST';\nexport const SET_CUSTOM_DISH_TO_FAVOUR_LIST = 'SET_CUSTOM_DISH_TO_FAVOUR_LIST';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSED_MODAL = 'CLOSED_MODAL';\n","import * as types from '../actionTypes';\n\nexport const initialState = {\n    recipe:           {},\n    recipeFavourList: [],\n    isLoading:        true,\n    isOpenModal:      false,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case types.START_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n            };\n\n        case types.FINISH_LOADING:\n            return {\n                ...state,\n                isLoading: false,\n            };\n\n        case types.OPEN_MODAL:\n            return {\n                ...state,\n                isOpenModal: true,\n            };\n\n        case types.CLOSED_MODAL:\n            return {\n                ...state,\n                isOpenModal: false,\n            };\n\n        case types.SET_RECIPE:\n            return {\n                ...state,\n                recipe: action.recipe,\n            };\n\n        case types.SET_FAVOUR_LIST:\n            return {\n                ...state,\n                recipeFavourList: action.favourList,\n            };\n\n        case types.SET_CUSTOM_DISH_TO_FAVOUR_LIST:\n            return {\n                ...state,\n                recipeFavourList: action.favourList,\n            };\n\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n","import React from 'react';\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport {localStorageHelper} from '../utils';\nimport general, {initialState} from './reducers/general';\n\nconst rootReducer = combineReducers({\n    general,\n});\n\nconst persistedState  = (initialState) => {\n    const initialFavourList = localStorageHelper.load();\n\n    return { general: {\n        ...initialState,\n        recipeFavourList: initialFavourList,\n    }};\n};\n\nconst store = createStore(\n    rootReducer,\n    persistedState(initialState),\n    composeWithDevTools(applyMiddleware(ReduxThunk)),\n);\n\nconst InitStore = ({ children }) => (\n    <Provider store = { store }>\n        {children}\n    </Provider>\n);\n\nexport default InitStore;\n","import {makeStyles} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    icon: {\n        color: '#d1d5da',\n    },\n});\n","import React from 'react';\nimport { Box, IconButton, Link, Typography } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport {useStyles} from './styles';\n\nconst Footer = () => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            align = 'center'\n            component = 'footer'\n            my = { 2 }>\n            <Typography\n                color = 'textSecondary'\n                component = 'span'\n                variant = 'subtitle1'>\n                \"Foodify Application\" by&nbsp;Dmitry&nbsp;Hniezdilov:&nbsp;\n            </Typography>\n            <IconButton\n                className = { classes.icon }\n                component = { Link }\n                href = 'https://github.com/DmitryHniezdilov/'\n                rel = 'noreferrer'\n                size = 'small'\n                target = '_blank'>\n                <GitHubIcon />\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default Footer;\n","import * as types from '../actionTypes';\n\nexport const setRecipe = () => async (dispatch) => {\n    dispatch({type: types.START_LOADING});\n\n    const recipe = await fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n        .then((res) => res.json())\n        .then((res) => {\n            return res.meals[ 0 ];\n        });\n\n    dispatch({type: types.SET_RECIPE, recipe});\n    dispatch({type: types.FINISH_LOADING});\n};\n\nexport const setFavourList = (favourList) => {\n    return  { type: types.SET_FAVOUR_LIST, favourList };\n};\n\nexport const setCustomDish = (favourList) => {\n    return  { type: types.SET_CUSTOM_DISH_TO_FAVOUR_LIST, favourList };\n};\n\nexport const setOpenModal = () => ({ type: types.OPEN_MODAL });\n\nexport const setClosedModal = () => ({ type: types.CLOSED_MODAL });\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    header: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    headerList: {\n        minHeight:        '60px',\n        '& :first-child': {\n            justifyContent: 'flex-end',\n        },\n    },\n    headerItemModal: {\n        justifyContent:                 'flex-end',\n        [ '@media (max-width:959px)' ]: {\n            justifyContent: 'center',\n        },\n    },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Box, Button, Grid, List, ListItem} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport * as action from '../../redux/actions/general';\nimport {useStyles} from './styles';\n\nconst Header = ({isModal}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const handleOpen = () => {\n        dispatch(action.setOpenModal());\n    };\n\n    return (\n        <Box\n            className = { classes.header }\n            component = 'header'>\n            <Box component = 'nav'>\n                <Grid\n                    container\n                    disablePadding\n                    className = { classes.headerList }\n                    component = { List }>\n                    <Grid\n                        item\n                        component = { ListItem }\n                        xs = { 6 }>\n                        <Button\n                            color = 'primary'\n                            component = { RouterLink }\n                            size = 'small'\n                            to = '/'>\n                            Random Dish\n                        </Button>\n                    </Grid>\n                    <Grid\n                        item\n                        component = { ListItem }\n                        md = { 3 }\n                        xs = { 6 }>\n                        <Button\n                            color = 'primary'\n                            component = { RouterLink }\n                            size = 'small'\n                            to = '/favourites'>\n                            Favourites\n                        </Button>\n                    </Grid>\n                    { isModal && (\n                        <Grid\n                            item\n                            className = { classes.headerItemModal }\n                            component = { ListItem }\n                            md = { 3 }\n                            xs = { 12 }>\n                            <Button\n                                color = 'primary'\n                                size = 'small'\n                                variant = 'contained'\n                                onClick = { handleOpen }>\n                                Add custom dish\n                            </Button>\n                        </Grid>\n                    )}\n                </Grid>\n            </Box>\n        </Box>\n    );\n};\n\nHeader.propTypes = {\n    isModal: PropTypes.bool,\n};\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    pageLayout: {\n        backgroundColor: 'inherit',\n        display:         'flex',\n        flexDirection:   'column',\n        position:        'relative',\n        minHeight:       '100vh',\n    },\n    pageLayoutBox: {\n        flexGrow:  '1',\n        textAlign: 'center',\n    },\n    footer: {\n        flexShrink: '0',\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Container, Box} from '@material-ui/core';\nimport Footer from '../Footer';\nimport Header from '../../containers/Header';\nimport {useStyles} from './styles';\n\nconst PageLayout = ({children, isModal}) => {\n    const classes = useStyles();\n\n    return (\n        <Container\n            className = { classes.pageLayout }\n            maxWidth = 'lg'>\n            <Header isModal = { isModal }/>\n            <Box\n                className = { classes.pageLayoutBox }\n                component = 'main'\n                my = { 2 }>\n\n                {children}\n\n            </Box>\n            <Footer className = { classes.footer }/>\n        </Container>\n    );\n};\n\nPageLayout.propTypes = {\n    children: PropTypes.node,\n    isModal:  PropTypes.bool,\n};\n\nexport default PageLayout;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        display:   'inline-block',\n        textAlign: 'left',\n        maxWidth:  500,\n        width:     '100%',\n        height:    '100%',\n    },\n    cardLink: {\n        height: '100%',\n    },\n    cardMediaBox: {\n        objectFit: 'cover',\n        height:    250,\n    },\n    cardMedia: {\n        width:  '100%',\n        height: '100%',\n    },\n    cardInstructions: {\n        display:   '-webkit-box',\n        boxOrient: 'vertical',\n        lineClamp: 4,\n        wordBreak: 'break-all',\n        overflow:  'hidden',\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Card as CardMUI, CardActionArea, CardContent, CardMedia, Box, Typography} from '@material-ui/core';\nimport {useStyles} from './styles';\n\nconst Card = (props) => {\n    const {imageUrl, dishName, instructions, children, id} = props;\n    const classes = useStyles();\n    const image = imageUrl || 'foodify_placeholder.svg';\n\n    return (\n        <CardMUI className = { classes.card }>\n            <CardActionArea\n                className = { classes.cardLink }\n                component = { RouterLink }\n                to = { `/details/${id}` }>\n                <Box\n                    className = { classes.cardMediaBox }>\n                    <CardMedia\n                        className = { classes.cardMedia }\n                        component = 'img'\n                        image = { image }\n                        title = { `${dishName} image` }\n                    />\n                </Box>\n                <CardContent>\n                    <Typography\n                        gutterBottom\n                        component = 'h2'\n                        variant = 'h5'>\n                        {dishName}\n                    </Typography>\n                    <Typography\n                        align = 'justify'\n                        className = { classes.cardInstructions }\n                        color = 'textSecondary'\n                        component = 'p'\n                        variant = 'body2'>\n                        {instructions}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            {children}\n        </CardMUI>\n    );\n};\n\nCard.propTypes = {\n    children:     PropTypes.node,\n    imageUrl:     PropTypes.string,\n    dishName:     PropTypes.string,\n    instructions: PropTypes.string,\n    id:           PropTypes.string,\n};\n\nexport default Card;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    cardActions: {\n        justifyContent: 'space-around',\n    },\n});\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, CardActions} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport PageLayout from '../../components/PageLayout';\nimport Card from '../../components/Card';\nimport * as action from '../../redux/actions/general';\nimport {useStyles} from './styles';\n\nconst Main = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { recipe, recipeFavourList } = useSelector((state) => state.general);\n    const { idMeal, strMeal, strMealThumb, strInstructions } = recipe;\n    const [ isFavour, setFavour ] = useState(false);\n\n    const skipAction = () => {\n        dispatch(action.setRecipe());\n        if (isFavour) {\n            setFavour(false);\n        }\n    };\n\n    const likeAction = () => {\n        const delFromRecipeFavourList = recipeFavourList.filter((item) => item.idMeal !== idMeal);\n        dispatch(action.setFavourList(isFavour ? delFromRecipeFavourList : [ ...recipeFavourList, recipe ]));\n        setFavour(!isFavour);\n    };\n\n    useEffect(() => {\n        //if random recipe are in favourList then isFavour is true\n        const findItem = recipeFavourList.find((item) => item.idMeal === idMeal);\n        findItem && setFavour(true);\n    }, []);\n\n    return (\n        <PageLayout>\n            <Card\n                dishName = { strMeal }\n                id = { idMeal }\n                imageUrl = { strMealThumb }\n                instructions = { strInstructions }>\n                <CardActions className = { classes.cardActions }>\n                    <Button\n                        color = 'primary'\n                        endIcon = { <SendIcon/> }\n                        size = 'small'\n                        onClick = { skipAction }>\n                        Skip\n                    </Button>\n                    <Button\n                        color = { isFavour ? 'secondary' : 'primary' }\n                        endIcon = { isFavour ? <FavoriteIcon/> : <FavoriteBorderIcon/> }\n                        size = 'small'\n                        onClick = { likeAction }>\n                        Like\n                    </Button>\n                </CardActions>\n            </Card>\n        </PageLayout>\n    );\n};\n\nexport default Main;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {Box, Grid, Typography} from '@material-ui/core';\nimport PageLayout from '../../components/PageLayout';\nimport Card from '../../components/Card';\n\nconst Favourites = () => {\n    const { recipeFavourList } = useSelector((state) => state.general);\n    const isRecipeFavourList = recipeFavourList.length === 0;\n    const reversedRecipeFavourList = [ ...recipeFavourList ].reverse();\n\n    return (\n        <PageLayout isModal>\n            <Grid\n                container\n                justifyContent = 'center'\n                spacing = { 4 }>\n                { isRecipeFavourList ? (\n                    <Box mt = { 10 }>\n                        <Typography\n                            align = 'center'\n                            variant = 'h5'>\n                            You don't have a list of your favorite foods.\n                        </Typography>\n                        <Typography\n                            align = 'center'\n                            variant = 'h5'>\n                            Dishes marked as liked will be displayed on this tab.\n                        </Typography>\n                    </Box>\n                ) :   reversedRecipeFavourList.map(({strMeal, strMealThumb, strInstructions, idMeal}) => {\n                    return (\n                        <Grid\n                            item\n                            key = { idMeal }\n                            md = { 4 }\n                            sm = { 6 }\n                            xs = { 12 }>\n                            <Card\n                                dishName = { strMeal }\n                                id = { idMeal }\n                                imageUrl = { strMealThumb }\n                                instructions = { strInstructions }>\n                            </Card>\n                        </Grid>\n                    );\n                })\n                }\n            </Grid>\n        </PageLayout>\n    );\n};\n\nexport default Favourites;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport PageLayout from '../../components/PageLayout';\n\nconst NotFound = () => {\n    return (\n        <PageLayout>\n            <Typography\n                align = 'center'\n                variant = 'h5'>\n                Page not found\n            </Typography>\n        </PageLayout>\n    );\n};\n\nexport default NotFound;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    cardDetails: {\n        display:   'inline-block',\n        textAlign: 'left',\n        maxWidth:  800,\n        width:     '100%',\n        height:    '100%',\n    },\n    cardLink: {\n        height: '100%',\n    },\n    cardDetailsMediaBox: {\n        objectFit: 'cover',\n        height:    300,\n    },\n    cardDetailsMedia: {\n        width:  '100%',\n        height: '100%',\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card as CardMUI, CardContent, CardMedia, Box, Typography} from '@material-ui/core';\nimport {useStyles} from './styles';\n\nconst CardDetails = (props) => {\n    const {imageUrl, dishName, instructions, children} = props;\n    const classes = useStyles();\n    const image = imageUrl || '../foodify_placeholder.svg';\n\n    return (\n        <CardMUI className = { classes.cardDetails }>\n            <CardContent>\n                <Typography\n                    align = 'center'\n                    component = 'h2'\n                    variant = 'h5'>\n                    {dishName}\n                </Typography>\n            </CardContent>\n            <Box\n                className = { classes.cardDetailsMediaBox }>\n                <CardMedia\n                    className = { classes.cardDetailsMedia }\n                    component = 'img'\n                    image = { image }\n                    title = { `${dishName} image` }\n                />\n            </Box>\n            <CardContent>\n                <Typography\n                    align = 'justify'\n                    color = 'textSecondary'\n                    component = 'p'\n                    variant = 'body2'>\n                    {instructions}\n                </Typography>\n            </CardContent>\n            {children}\n        </CardMUI>\n    );\n};\n\nCardDetails.propTypes = {\n    children:     PropTypes.node,\n    imageUrl:     PropTypes.string,\n    dishName:     PropTypes.string,\n    instructions: PropTypes.string,\n};\n\nexport default CardDetails;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    cardDetailsActions: {\n        justifyContent: 'center',\n    },\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport { CardActions, Button} from '@material-ui/core';\nimport PageLayout from '../../components/PageLayout';\nimport CardDetails from '../../components/CardDetails';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport * as action from '../../redux/actions/general';\nimport {useStyles} from './styles';\n\nconst Details = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const { recipeFavourList, recipe } = useSelector((state) => state.general);\n    const history = useHistory();\n    const { params } = useRouteMatch();\n    const {id} = params;\n\n    const findItem = recipeFavourList.find((item) => item.idMeal === id);\n    const { idMeal, strMeal, strMealThumb, strInstructions } = findItem || recipe;\n\n    const handlerAction = () => {\n        const delFromRecipeFavourList = recipeFavourList.filter((item) => item.idMeal !== idMeal);\n        dispatch(action.setFavourList(findItem ? delFromRecipeFavourList : [ ...recipeFavourList, recipe ]));\n        findItem && history.push('/');\n    };\n\n    return (\n        <PageLayout>\n            <CardDetails\n                dishName = { strMeal }\n                imageUrl = { strMealThumb }\n                instructions = { strInstructions }>\n                <CardActions className = { classes.cardDetailsActions }>\n                    <Button\n                        color = { !findItem ? 'primary' : 'secondary' }\n                        endIcon = { !findItem ? <FavoriteBorderIcon/> : <DeleteIcon/> }\n                        size = 'small'\n                        onClick = { handlerAction }>\n                        {!findItem ? 'Like' : 'Delete'}\n                    </Button>\n                </CardActions>\n            </CardDetails>\n        </PageLayout>\n    );\n};\n\nexport default Details;\n","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport Main from './pages/Main';\nimport Favourites from './pages/Favourites';\nimport NotFound from './pages/NotFound';\nimport Details from './pages/Details';\n\nconst Router = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route\n                    exact\n                    key = '/'\n                    path = '/'>\n                    <Main/>\n                </Route>\n                <Route\n                    exact\n                    key = 'chart'\n                    path = '/favourites'>\n                    <Favourites/>\n                </Route>\n                <Route\n                    exact\n                    key = 'chart'\n                    path = '/details/:id'>\n                    <Details/>\n                </Route>\n                <Route path = '*'>\n                    <NotFound/>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Router;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    loading: {\n        backgroundColor: theme.palette.background.paper,\n        display:         'none',\n        position:        'fixed',\n        zIndex:          9999,\n        top:             0,\n        left:            0,\n        width:           '100%',\n        height:          '100%',\n        justifyContent:  'center',\n        alignItems:      'center',\n    },\n}));\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport {useStyles} from './styles';\n\nconst Loading = () => {\n    const classes = useStyles();\n    const {isLoading} = useSelector((state) => state.general);\n    const activeLoading = isLoading ? 'flex' : '';\n\n    return (\n        <Box\n            className = { classes.loading }\n            style = {{display: `${activeLoading}`}}>\n            <CircularProgress/>\n        </Box>\n    );\n};\n\nexport default Loading;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    modal: {\n        display:        'flex',\n        alignItems:     'center',\n        justifyContent: 'center',\n        padding:        theme.spacing(0, 3),\n    },\n    paper: {\n        width:         '100%',\n        maxWidth:      600,\n        padding:       theme.spacing(3),\n        marginLeft:    'auto',\n        marginRight:   'auto',\n        display:       'flex',\n        flexDirection: 'column',\n        alignItems:    'center',\n    },\n    form: {\n        width:     '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    error: {\n        marginTop: theme.spacing(2),\n    },\n}));\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport {Modal, Backdrop, Fade, Typography, Box, TextField, Button, Paper} from '@material-ui/core';\nimport * as action from '../../redux/actions/general';\nimport {localStorageHelper} from '../../utils';\nimport {useStyles} from './styles';\n\nconst AddDishModal = () => {\n    const classes = useStyles();\n    const { handleSubmit, errors, control } = useForm();\n    const dispatch = useDispatch();\n    const { isOpenModal, recipeFavourList } = useSelector((state) => state.general);\n\n    const handleClose = () => {\n        dispatch(action.setClosedModal());\n    };\n\n    const onSubmit = ({title, text}) => {\n        const customDish = {\n            idMeal:          String(Date.now()),\n            strMeal:         title,\n            strInstructions: text,\n        };\n        dispatch(action.setCustomDish([ ...recipeFavourList, customDish ]));\n        localStorageHelper.store([ ...recipeFavourList, customDish ]);\n        handleClose();\n    };\n\n    return (\n        <Modal\n            closeAfterTransition\n            BackdropComponent = { Backdrop }\n            BackdropProps = {{\n                timeout: 500,\n            }}\n            className = { classes.modal }\n            open = { isOpenModal }\n            onClose = { handleClose }>\n            <Fade in = { isOpenModal }>\n                <Paper className = { classes.paper }>\n                    <Typography\n                        component = 'h1'\n                        variant = 'h5'>\n                        Add custom dish\n                    </Typography>\n                    <form\n                        className = { classes.form }\n                        onSubmit = { handleSubmit(onSubmit) }>\n                        <Box mb = { 2 }>\n                            <Controller\n                                as = {\n                                    <TextField\n                                        autoFocus\n                                        fullWidth\n                                        error = { !!errors?.title?.type }\n                                        helperText = { errors?.title?.message }\n                                        id = 'title'\n                                        label = 'Title'\n                                        type = 'text'\n                                        variant = 'outlined'\n                                    />\n                                }\n                                control = { control }\n                                defaultValue = ''\n                                name = 'title'\n                                rules = {{\n                                    required: {\n                                        value:   true,\n                                        message: 'Title is required'},\n                                    minLength: {\n                                        value:   5,\n                                        message: 'Title is too short'},\n                                }}\n                            />\n                        </Box>\n                        <Box>\n                            <Controller\n                                as = {\n                                    <TextField\n                                        fullWidth\n                                        multiline\n                                        error = { !!errors?.text?.type }\n                                        helperText = { errors?.text?.message }\n                                        id = 'text'\n                                        label = 'Text'\n                                        rows = { 4 }\n                                        type = 'text'\n                                        variant = 'outlined'\n                                    />\n                                }\n                                control = { control }\n                                defaultValue = ''\n                                name = 'text'\n                                rules = {{\n                                    required: {\n                                        value:   true,\n                                        message: 'Text is required'},\n                                    minLength: {\n                                        value:   20,\n                                        message: 'Text is too short'},\n                                }}\n                            />\n                        </Box>\n                        <Button\n                            fullWidth\n                            className = { classes.submit }\n                            color = 'primary'\n                            type = 'submit'\n                            variant = 'contained'>\n                            Add dish\n                        </Button>\n                    </form>\n                </Paper>\n            </Fade>\n        </Modal>\n    );\n};\n\nexport default AddDishModal;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Router from './Router';\nimport Loading from './components/Loading';\nimport AddDishModal from './containers/AddDishModal';\nimport {localStorageHelper} from './utils';\nimport * as action from './redux/actions/general';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const { recipeFavourList } = useSelector((state) => state.general);\n\n    useEffect(() => {\n        dispatch(action.setRecipe());\n    }, []);\n\n    useEffect(() => {\n        localStorageHelper.store(recipeFavourList);\n    }, [ recipeFavourList ]);\n\n    return (\n        <>\n            <AddDishModal/>\n            <Loading/>\n            <Router/>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InitStore from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <InitStore>\n            <App/>\n        </InitStore>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}